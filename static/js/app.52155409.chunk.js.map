{"version":3,"sources":["App.js","assets/fonts/Ubuntu-Medium.ttf"],"names":["windowWidth","Dimensions","get","width","App","useFonts","UbuntuMedium","require","loaded","date","Date","dateArray","year","getFullYear","month","String","getMonth","padStart","day","getDate","week","getDay","useState","input","setInput","items","setItems","modify","setModify","useEffect","a","async","AsyncStorage","getItem","jsonValue","JSON","parse","newItems","Object","keys","map","key","console","log","getData","value","stringify","setItem","setData","modifyChange","modiOkBtn","id","style","styles","container","header","title","dateContainer","content","inputContain","placeholder","onChangeText","inputText","returnKeyType","onSubmitEditing","newItem","now","checked","itemContain","length","itemWrap","checkItemWrap","onPress","checkedItem","checkbox","modiInput","multiline","numberOfLines","modiBtn","itemText","checkedItemText","modiItems","delItem","delBtn","empty","StyleSheet","create","flex","backgroundColor","color","alignItems","justifyContent","paddingVertical","paddingHorizontal","paddingTop","textAlign","fontSize","fontFamily","borderRadius","maxWidth","flexShrink","display","flexDirection","marginBottom","borderWidth","borderColor","height","marginRight","opacity","marginHorizontal","module","exports"],"mappings":"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","file":"static/js/app.52155409.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport { \n  StyleSheet, \n  Text, \n  View, \n  ScrollView, \n  TextInput , \n  Dimensions, \n  TouchableOpacity,\n} from 'react-native';\nimport { useFonts } from 'expo-font';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\n\nconst windowWidth = Dimensions.get('window').width;\n\n\nexport default function App() {\n  \n  /* font */\n  const [loaded] = useFonts({\n    UbuntuMedium: require('./assets/fonts/Ubuntu-Medium.ttf'),\n  });\n\n  /* date */\n  const date = new Date();\n  const dateArray = {\n      year : date.getFullYear(),\n      month : String(date.getMonth() + 1).padStart(2,\"0\"),\n      day : String(date.getDate()).padStart(2,\"0\"),\n      week : date.getDay()\n  }\n  const weekChangeText = [ \"Sunday üññ\" ,\"Monday üí™üòÄ\" ,\"Tuesday üòú\" ,\"Wednesday üòå‚òïÔ∏è\" ,\"Thursday ü§ó\" ,\"Friday üçª\" ,\"Saturday üò¥\" ]\n\n    \n  /* item */\n  const [input, setInput] = useState('');\n  const [items, setItems] = useState({});\n  const [modify, setModify] = useState('');\n\n  const STORAGE_KEY = \"@ITEMS\";\n\n\n  const setData = async (value) => {\n    try {\n      const jsonValue = JSON.stringify(value)\n      await AsyncStorage.setItem(STORAGE_KEY, jsonValue);\n    } catch (e) {\n      console.log('saving error');\n    }\n  }\n\n\n  const getData = async () => {\n    try {\n      const jsonValue = await AsyncStorage.getItem(STORAGE_KEY)\n      if(jsonValue != null){ \n        const getItem = JSON.parse(jsonValue);\n        setItems(getItem);\n        const newItems = Object.keys(getItem).map((key) => ( (getItem[key].modify === true) ? {...getItem[key], modify: false } : { ...getItem[key]} ))\n        setItems(newItems)\n      }else{ \n        //setItems({}) \n      }\n    } catch(e) {\n      console.log('error reading value');\n    }\n  }\n\n  useEffect(() => {\n    getData()\n  } , []);\n\n\n  useEffect(() => {\n    setData(items);\n  }, [items])\n\n  const onChange = (inputText) => {\n    setInput(inputText)\n  }\n\n  const modifyChange = (modify) => {\n    setModify(modify)\n  }\n\n  const addItem = () => {\n    if(input !== \"\"){\n      const newItem = {...items, [Date.now()] : { value : input, modify:false , checked : false }};\n      setItems(newItem);\n      setInput('');\n    }\n  }\n\n  const checkedItem = (id) => {\n    const newItems = { ...items };\n    newItems[id].checked = !newItems[id].checked;\n    setItems(newItems);\n  }\n\n  const modiBtn = (id , value) => {\n    setModify(value);\n    const newItems = Object.keys(items).map((key) => ( (key === id) ? {...items[key], modify: !items[key].modify } : { ...items[key], modify: false } ))\n    setItems(newItems)\n  }\n  const modiOkBtn = (id) => {\n    const newItems = { ...items };\n    newItems[id].value =  modify;\n    newItems[id].modify =  false;\n    setItems(newItems);\n  }\n\n  const delItem = (id) => {\n    const modiItems = {...items }\n    delete modiItems[id];\n    setItems(modiItems);\n  }\n\n  if (!loaded) {\n    return null;\n  }\n\n  return (\n    <View style={styles.container}>\n      <StatusBar style=\"auto\" />\n        <View style={styles.header}><Text style={styles.title}>TODOLIST</Text></View>\n        <View style={styles.dateContainer}>\n          <Text style={styles.date}>{dateArray.year} . {dateArray.month} . {dateArray.day}</Text>\n          <Text style={styles.content}>Have a nice {weekChangeText[dateArray.week]}</Text>\n        </View>\n        <View style={styles.inputContain}>\n          <TextInput \n            style={styles.input} \n            placeholder=\"Add item...\" \n            onChangeText={onChange} \n            value={input}\n            returnKeyType=\"done\"\n            onSubmitEditing={addItem}\n          />\n        </View>\n        <ScrollView style={styles.itemContain}>\n          {Object.keys(items).length !== 0 ? \n            Object.keys(items).map((key) => (\n              <View \n                style={[styles.itemWrap , items[key].checked ? styles.checkItemWrap : \"\"]} \n                key={key}  \n              >\n                <TouchableOpacity \n                  onPress={() => checkedItem(key)}\n                >\n                    <Text style={styles.checkbox}>{items[key].checked ? \"‚úîÔ∏è\" : \"\"}</Text>\n                </TouchableOpacity>\n                {\n                  items[key].modify ? \n                  <>\n                    <TextInput \n                      style={styles.modiInput} \n                      onChangeText={modifyChange}\n                      value = {modify}\n                      multiline\n                      numberOfLines={4}\n                      placeholder=\"Modify...\" \n                      returnKeyType=\"done\"\n                      onSubmitEditing={() => modiOkBtn(key)}\n                    />\n                    <TouchableOpacity onPress={() => modiOkBtn(key)}>\n                        <Text style={styles.modiBtn}>üìù</Text>\n                    </TouchableOpacity>\n                  </>\n                  :\n                  <>\n                    <Text style={[styles.itemText, items[key].checked ? styles.checkedItemText : \"\"]}>\n                      {items[key].value}\n                    </Text>\n                    <TouchableOpacity onPress={() => modiBtn(key , items[key].value)}>\n                        <Text style={styles.modiBtn}>üìù</Text>\n                    </TouchableOpacity>\n                  </>\n                }\n                \n                <TouchableOpacity onPress={() => delItem(key)}>\n                  <Text style={styles.delBtn}>‚ùå</Text>\n                </TouchableOpacity>\n              </View>\n            ))\n            :\n            <Text style={styles.empty}>\n              There are no registered items...\n            </Text>\n          }\n        </ScrollView>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#020631',\n    color:'#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  header : {\n    width: '100%',\n    paddingVertical : 20,\n    paddingHorizontal : 10,\n    paddingTop: 60,\n  },\n  title : {\n    textAlign : 'center',\n    fontSize : 20,\n    color : '#fff',\n    fontFamily : 'UbuntuMedium'\n  }, \n  dateContainer : {} ,\n  date : {\n    color:'#fff',\n    fontSize : 16,\n    textAlign : 'center',\n    fontFamily : 'UbuntuMedium'\n  },\n  content : {\n    textAlign : 'center',\n    color : '#fff',\n    fontSize : 25,\n    fontFamily : 'UbuntuMedium'\n  },\n  inputContain : { \n    paddingHorizontal : 10,\n    paddingVertical : 20,\n    width : windowWidth,\n    alignItems : 'center'\n  },\n  input : {\n    backgroundColor : '#fff',\n    paddingHorizontal: 10,\n    paddingVertical : 10,\n    fontSize: 16,\n    borderRadius : 5,\n    width: '100%',\n    maxWidth: 350,\n    flexShrink: 1,\n  },\n  itemContain : {\n    display: 'flex',\n    width : windowWidth,\n    maxWidth : 350,\n  },\n  itemWrap : { \n    flexDirection : 'row',\n    justifyContent : 'space-between',\n    alignItems : 'flex-start',\n    marginBottom : 15,\n    width : '100%',\n    flexShrink: 1,\n    backgroundColor : '#fff',\n    paddingHorizontal : 10,\n    paddingVertical : 10,\n    borderRadius : 5,\n  },\n  checkItemWrap : {\n    backgroundColor : '#5529dc',\n  },\n  checkbox : {\n    flexShrink: 1,\n    borderWidth : 2,\n    borderColor : '#7f7f7f',\n    textAlign : 'center',\n    width: 20,\n    height: 20,\n    fontSize : 10,\n    backgroundColor : '#fff'\n  } ,\n  itemText : { \n    fontSize : 14,\n    flexShrink: 1,\n    fontFamily : 'UbuntuMedium',\n    fontSize: 14,\n    width : '100%',\n    paddingHorizontal : 10\n  },\n  checkedItemText :{\n    color : '#fff'\n  }, \n  modiBtn : { \n    textAlign : 'center',\n    flexShrink: 1,\n    marginRight : 10\n  },\n  delBtn : { \n    textAlign : 'center',\n    flexShrink: 1,\n  },\n  empty : {\n    color:'#fff',\n    width: '100%',\n    textAlign : 'center',\n    opacity : 0.5,\n  },\n  modiInput : { \n    flexShrink: 1,\n    width:'100%',\n    paddingHorizontal : 10,\n    paddingVertical : 5,\n    backgroundColor : '#fff',\n    borderWidth : 1,\n    borderColor : '#7f7f7f',\n    marginHorizontal : 10\n  }\n});\n","module.exports = __webpack_public_path__ + \"./fonts/Ubuntu-Medium.ttf\";"],"sourceRoot":""}